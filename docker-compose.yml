services:
  evolution-api:
    container_name: evolution-api
    image: atendai/evolution-api:v2.1.1
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - evolution_instances:/evolution/instances
    depends_on:
      - postgres
      - redis
  postgres:
    container_name: postgres
    image: postgres:15
    command: ["postgres", "-c", "max_connections=1000"]
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
  redis:
    image: redis:alpine
    container_name: redis
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - redis:/data
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
  bot:
    build: .
    container_name: bot
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      evolution-api:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    restart: always
    volumes:
      - ./vectorstore:/app/vectorstore
      - ./rag_files:/app/rag_files

volumes:
  evolution_instances:
  postgres_data:
  redis:
  vectorstore:
  rag_files: